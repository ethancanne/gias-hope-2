{
  "version": 3,
  "sources": ["../../stackbit.config.js"],
  "sourcesContent": ["import { defineStackbitConfig, SiteMapEntry } from '@stackbit/types';\nimport { GitContentSource } from '@stackbit/cms-git';\n\nexport default defineStackbitConfig({\n  stackbitVersion: '~0.6.0',\n  ssgName: 'nextjs', // Replace with your static site generator if different\n  nodeVersion: '16',\n  contentSources: [\n    new GitContentSource({\n      rootPath: __dirname,\n      assetsConfig: {\n        referenceType: 'static',\n        staticDir: 'public',\n        uploadDir: 'images',\n        publicPath: '/',\n      },\n      contentDirs: ['content/posts', 'content/pages'],\n      models: [\n        {\n          name: 'post',\n          type: 'page',\n          filePath: 'content/posts/{slug}.md',\n          fields: [\n            { name: 'title', type: 'string', required: true },\n            { name: 'image', type: 'image' },\n            { name: 'date', type: 'datetime' },\n            { name: 'author', type: 'string' },\n            { name: 'category', type: 'string' },\n            { name: 'content', type: 'markdown' },\n          ],\n        },\n        {\n          name: 'homePage',\n          type: 'page',\n          filePath: 'content/pages/home-page.md',\n          fields: [\n            {\n              name: 'pageInformation',\n              type: 'object',\n              fields: [\n                { name: 'title', type: 'string' },\n                { name: 'link', type: 'string' },\n                { name: 'description', type: 'string' },\n                { name: 'desktopPageImage', type: 'image' },\n                { name: 'mobilePageImage', type: 'image' },\n                { name: 'isHidden', type: 'boolean' },\n                { name: 'hasButton', type: 'boolean' },\n                {\n                  name: 'buttonType',\n                  type: 'enum',\n                  options: ['yellow', 'green'],\n                },\n                { name: 'order', type: 'number' },\n              ],\n            },\n            {\n              name: 'whoWeAreData',\n              type: 'object',\n              fields: [\n                { name: 'text', type: 'markdown' },\n                {\n                  name: 'featuredImages',\n                  type: 'list',\n                  items: {\n                    type: 'object',\n                    fields: [\n                      { name: 'src', type: 'image' },\n                      { name: 'alt', type: 'string' },\n                    ],\n                  },\n                },\n              ],\n            },\n            {\n              name: 'verseData',\n              type: 'object',\n              fields: [\n                { name: 'text', type: 'string' },\n                { name: 'reference', type: 'string' },\n              ],\n            },\n            { name: 'whoIsGiannaText', type: 'markdown' },\n            { name: 'ourVisionText', type: 'markdown' },\n            {\n              name: 'howYouCanHelpData',\n              type: 'object',\n              fields: [\n                { name: 'text', type: 'markdown' },\n                { name: 'donateLink', type: 'string' },\n                {\n                  name: 'images',\n                  type: 'list',\n                  items: {\n                    type: 'object',\n                    fields: [\n                      { name: 'src', type: 'image' },\n                      { name: 'alt', type: 'string' },\n                    ],\n                  },\n                },\n              ],\n            },\n          ],\n        },\n        {\n          name: 'ourImpactPage',\n          type: 'page',\n          filePath: 'content/pages/our-impact-page.md',\n          fields: [\n            {\n              name: 'pageInformation',\n              type: 'object',\n              fields: [\n                { name: 'title', type: 'string' },\n                { name: 'link', type: 'string' },\n                { name: 'description', type: 'string' },\n                { name: 'desktopPageImage', type: 'image' },\n                { name: 'mobilePageImage', type: 'image' },\n                { name: 'isHidden', type: 'boolean' },\n                { name: 'hasButton', type: 'boolean' },\n                {\n                  name: 'buttonType',\n                  type: 'enum',\n                  options: ['yellow', 'green'],\n                },\n                { name: 'order', type: 'number' },\n              ],\n            },\n            {\n              name: 'featuredData',\n              type: 'list',\n              items: {\n                type: 'object',\n                fields: [\n                  { name: 'text', type: 'string' },\n                  { name: 'number', type: 'number' },\n                ],\n              },\n            },\n            {\n              name: 'detailsData',\n              type: 'list',\n              items: {\n                type: 'object',\n                fields: [\n                  { name: 'title', type: 'string' },\n                  { name: 'description', type: 'markdown' },\n                  { name: 'image', type: 'image' },\n                  { name: 'link', type: 'string' },\n                ],\n              },\n            },\n          ],\n        },\n        {\n          name: 'whatWeDoPage',\n          type: 'page',\n          filePath: 'content/pages/what-we-do-page.md',\n          fields: [\n            {\n              name: 'pageInformation',\n              type: 'object',\n              fields: [\n                { name: 'title', type: 'string' },\n                { name: 'link', type: 'string' },\n                { name: 'description', type: 'string' },\n                { name: 'desktopPageImage', type: 'image' },\n                { name: 'mobilePageImage', type: 'image' },\n                { name: 'isHidden', type: 'boolean' },\n                { name: 'hasButton', type: 'boolean' },\n                {\n                  name: 'buttonType',\n                  type: 'enum',\n                  options: ['yellow', 'green'],\n                },\n                { name: 'order', type: 'number' },\n              ],\n            },\n            {\n              name: 'visionsData',\n              type: 'list',\n              items: {\n                type: 'object',\n                fields: [\n                  { name: 'title', type: 'string' },\n                  { name: 'icon', type: 'string' },\n                  { name: 'id', type: 'string' },\n                  { name: 'description', type: 'string' },\n                  { name: 'backgroundImage', type: 'image' },\n                  { name: 'backgroundColor', type: 'string' },\n                ],\n              },\n            },\n          ],\n        },\n        {\n          name: 'ourStoryPage',\n          type: 'page',\n          filePath: 'content/pages/our-story-page.md',\n          fields: [\n            {\n              name: 'pageInformation',\n              type: 'object',\n              fields: [\n                { name: 'title', type: 'string' },\n                { name: 'link', type: 'string' },\n                { name: 'description', type: 'string' },\n                { name: 'desktopPageImage', type: 'image' },\n                { name: 'mobilePageImage', type: 'image' },\n                { name: 'isHidden', type: 'boolean' },\n                { name: 'hasButton', type: 'boolean' },\n                {\n                  name: 'buttonType',\n                  type: 'enum',\n                  options: ['yellow', 'green'],\n                },\n                { name: 'order', type: 'number' },\n              ],\n            },\n            {\n              name: 'storyBlocks',\n              type: 'list',\n              items: {\n                type: 'object',\n                fields: [\n                  { name: 'title', type: 'string', required: false },\n                  { name: 'header', type: 'string', required: false },\n                  { name: 'content', type: 'markdown' },\n                  { name: 'image', type: 'image', required: false },\n                  { name: 'coloredBlock', type: 'boolean', required: false },\n                  { name: 'reversedBlock', type: 'boolean', required: false },\n                ],\n              },\n            },\n          ],\n        },\n        {\n          name: 'applyForGrantPage',\n          type: 'page',\n          filePath: 'content/pages/apply-for-a-grant-page.md',\n          fields: [\n            {\n              name: 'pageInformation',\n              type: 'object',\n              fields: [\n                { name: 'title', type: 'string' },\n                { name: 'link', type: 'string' },\n                { name: 'description', type: 'string' },\n                { name: 'desktopPageImage', type: 'image' },\n                { name: 'mobilePageImage', type: 'image' },\n                { name: 'isHidden', type: 'boolean' },\n                { name: 'hasButton', type: 'boolean' },\n                {\n                  name: 'buttonType',\n                  type: 'enum',\n                  options: ['yellow', 'green'],\n                },\n                { name: 'order', type: 'number' },\n              ],\n            },\n            {\n              name: 'grantInformationData',\n              type: 'object',\n              fields: [\n                { name: 'description', type: 'markdown' },\n                { name: 'guidelines', type: 'markdown' },\n                { name: 'image', type: 'image' },\n              ],\n            },\n            {\n              name: 'grantSettings',\n              type: 'object',\n              fields: [\n                { name: 'isOpen', type: 'boolean' },\n                { name: 'deadline', type: 'datetime' },\n              ],\n            },\n            {\n              name: 'grantFormFields',\n              type: 'list',\n              items: {\n                type: 'object',\n                fields: [\n                  { name: 'label', type: 'string' },\n                  {\n                    name: 'name',\n                    type: 'string',\n                  },\n                  {\n                    name: 'type',\n                    type: 'enum',\n                    options: ['text', 'email', 'phone', 'date', 'textarea'],\n                  },\n                  { name: 'required', type: 'boolean' },\n                ],\n              },\n            },\n          ],\n        },\n        {\n          name: 'postsPage',\n          type: 'page',\n          filePath: 'content/pages/posts-page.md',\n          fields: [\n            {\n              name: 'pageInformation',\n              type: 'object',\n              fields: [\n                { name: 'title', type: 'string' },\n                { name: 'link', type: 'string' },\n                { name: 'description', type: 'string' },\n                { name: 'desktopPageImage', type: 'image' },\n                { name: 'mobilePageImage', type: 'image' },\n                { name: 'isHidden', type: 'boolean' },\n                { name: 'hasButton', type: 'boolean' },\n                {\n                  name: 'buttonType',\n                  type: 'enum',\n                  options: ['yellow', 'green'],\n                },\n                { name: 'order', type: 'number' },\n              ],\n            },\n            {\n              name: 'postsList',\n              type: 'list',\n              items: {\n                type: 'object',\n                fields: [\n                  { name: 'title', type: 'string' },\n                  { name: 'excerpt', type: 'string' },\n                  { name: 'date', type: 'datetime' },\n                  { name: 'author', type: 'string' },\n                  { name: 'image', type: 'image' },\n                  { name: 'slug', type: 'string' },\n                ],\n              },\n            },\n          ],\n        },\n      ],\n    }),\n  ],\n\n  siteMap: ({ documents, models }) => {\n    // 1. Filter all page models\n    const pageModels = models.filter((m) => m.type === 'page');\n\n    return (\n      documents\n        // 2. Filter all documents which are of a page model\n        .filter((d) => pageModels.some((m) => m.name === d.modelName))\n        // 3. Map each document to a SiteMapEntry\n        .map((document) => {\n          // Map the model name to its corresponding URL\n          const urlModel = (() => {\n            switch (document.modelName) {\n              case 'Page':\n                return 'otherPage';\n              case 'Blog':\n                return 'otherBlog';\n              default:\n                return null;\n            }\n          })();\n\n          return {\n            stableId: document.id,\n            urlPath: `/${urlModel}/${document.id}`,\n            document,\n            isHomePage: false,\n          };\n        })\n        .filter(Boolean)\n    );\n  },\n});\n"],
  "mappings": "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",
  "names": []
}
